package com.config;

import org.springframework.core.io.support.PropertiesLoaderUtils;
/**
 * 配置文件的读取的方式
 * @author：liumeihui
 * 2019-3-4
 */
import java.io.*;
import java.util.Enumeration;
import java.util.Properties;

public class testconfig_01 {
    private static void printAllProperty(Properties props) {
        Enumeration en = props.propertyNames();
        while (en.hasMoreElements()) {
            String key = (String) en.nextElement();
            String value = props.getProperty(key);
            System.out.println(key + ":" + value);
        }


    }

    /**
     * 根据key读取value
     * 45      *
     * 46      * @Title: getProperties_1
     * 47      * @Description: 第一种方式：根据文件名使用spring中的工具类进行解析
     * 48      *                  filePath是相对路劲，文件需在classpath目录下
     * 49      *                   比如：config.properties在包com.test.config下，
     * 50      *                路径就是com/test/config/config.properties
     * 51      *
     *
     * @param filepath
     * @param keyWord
     * @return
     */
    public static String getProperties_1(String filepath, String keyWord) {
        Properties prop = null;
        String value = null;
        try {
            prop = PropertiesLoaderUtils.loadAllProperties(filepath);
            value = prop.getProperty(keyWord);
        } catch (IOException e) {
            e.printStackTrace();
        }
        return value;

    }

    /**
     * 读取配置文件所有信息
     * 74      *
     * 75      * @Title: getProperties_1
     * 76      * @Description: 第一种方式：根据文件名使用Spring中的工具类进行解析
     * 77      *                  filePath是相对路劲，文件需在classpath目录下
     * 78      *                   比如：config.properties在包com.test.config下，
     * 79      *                路径就是com/test/config/config.properties
     *
     * @param filepath
     * @return
     */

    public static void getProperties_1(String filepath) {
        Properties prop = null;
        try {
            prop = PropertiesLoaderUtils.loadAllProperties(filepath);
            printAllProperty(prop);
        } catch (IOException e) {
            e.printStackTrace();
        }


    }

    /**
     * 根据key读取value
     *  98      *
     *  99      * @Title: getProperties_2
     * 100      * @Description: 第二种方式：使用缓冲输入流读取配置文件，然后将其加载，再按需操作
     * 101      *                    绝对路径或相对路径， 如果是相对路径，则从当前项目下的目录开始计算，
     * 102      *                  如：当前项目路径/config/config.properties,
     * 103      *                  相对路径就是config/config.properties
     * 104      *
     * @param filepath
     * @param keyWord
     * @return
     */
    public static String getProperties_2(String filepath,String keyWord){
        Properties prop=null;
        String value=null;
        try {
//            File file=new File(filepath);
//            FileInputStream fileInputStream=new FileInputStream(file);
//            InputStream inputStream=new BufferedInputStream(fileInputStream);
            InputStream inputStream=new BufferedInputStream(new FileInputStream(new File(filepath)));
            prop.load(inputStream);
            value=prop.getProperty(keyWord);

        } catch (IOException e) {
            e.printStackTrace();
        }
        return value;


    }

    /**
     * 读取配置文件所有信息
     * 129      *
     * 130      * @Title: getProperties_2
     * 131      * @Description: 第二种方式：使用缓冲输入流读取配置文件，然后将其加载，再按需操作
     * 132      *                    绝对路径或相对路径， 如果是相对路径，则从当前项目下的目录开始计算，
     * 133      *                  如：当前项目路径/config/config.properties,
     * 134      *                  相对路径就是config/config.properties
     * 135      *
     * @param
     */

public static void getProperties_2(String filepath){
    Properties prop=null;
    try {
        InputStream inputStream=new BufferedInputStream(new FileInputStream(new File(filepath)));
        prop.load(inputStream);
        printAllProperty(prop);

    } catch (IOException e) {
        e.printStackTrace();
    }

}

    /**
     * 根据key读取value
     * 155      *
     * 156      * @Title: getProperties_3
     * 157      * @Description: 第三种方式：
     * 158      *                    相对路径， properties文件需在classpath目录下，
     * 159      *                  比如：config.properties在包com.test.config下，
     * 160      *                  路径就是/com/test/config/config.properties
     * @param
     */
    public static String getProperties_3(String filepath,String keyWord){
        Properties prop=null;
        String value=null;
        InputStream inputStream=testconfig_01.class.getResourceAsStream(filepath);

        try {
            prop.load(inputStream);
            value=prop.getProperty(keyWord);

        } catch (IOException e) {
            e.printStackTrace();
        }
        return value;
    }

    /**
     * 读取配置文件所有信息
     * 182      *
     * 183      * @Title: getProperties_3
     * 184      * @Description: 第三种方式：
     * 185      *                    相对路径， properties文件需在classpath目录下，
     * 186      *                  比如：config.properties在包com.test.config下，
     * 187      *                  路径就是/com/test/config/config.properties
     * @param
     */
    public static void getProperties_3(String filepath){
        Properties prop=null;
        InputStream inputStream=testconfig_01.class.getResourceAsStream(filepath);
        try {
            prop.load(inputStream);
        } catch (IOException e) {
            e.printStackTrace();
        }
        printAllProperty(prop);

    }
    public static void main(String[] args){
     String properties_1=getProperties_1("config.properties","jdbc.driverClassName");
     System.out.println("jdbc.driverClassName的值="+properties_1);
     getProperties_1("config.properties");
    }
}
